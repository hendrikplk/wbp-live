'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.startPublishWorker = startPublishWorker;
exports.stopPublishWorker = stopPublishWorker;
/* global Meteor */

function scheduleNextRun(store, time) {
  // eslint-disable-next-line no-use-before-define
  return Meteor.setTimeout(function () {
    return startPublishWorker(store);
  }, time);
}

function startPublishWorker(store) {
  if (typeof Meteor !== 'undefined') {
    store.setWorkerHandler(null);

    store.publishAllJoin();

    // what should be the timeout number? is 500 a good number
    var handler = scheduleNextRun(store, 500);

    store.setWorkerHandler(handler);
  }
}

function stopPublishWorker(store, log) {
  if (typeof Meteor !== 'undefined') {
    var handler = store.getWorkerHandler();
    store.setWorkerHandler(null);

    if (handler) {
      log('Publish worker is stopped', 7);
      Meteor.clearTimeout(handler);
      return;
    }

    log('Couldn\'t stop the publish worker, try again', 4);
    // XXX Could there be any issues causing this run forever?
    Meteor.setTimeout(function () {
      return stopPublishWorker(store, log);
    }, 200);
  }
}